[{"path":"/LICENSE.html","id":"gnu-lesser-general-public-license","dir":"","previous_headings":"","what":"GNU LESSER GENERAL PUBLIC LICENSE","title":"NA","text":"Version 2.1, February 1999","code":"Copyright (C) 1991, 1999 Free Software Foundation, Inc. 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA  Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.  [This is the first released version of the Lesser GPL.  It also counts  as the successor of the GNU Library Public License, version 2, hence  the version number 2.1.]"},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"NA","text":"licenses software designed take away freedom share change . contrast, GNU General Public Licenses intended guarantee freedom share change free software–make sure software free users. license, Lesser General Public License, applies specially designated software packages–typically libraries–Free Software Foundation authors decide use . can use , suggest first think carefully whether license ordinary General Public License better strategy use particular case, based explanations . speak free software, referring freedom use, price. General Public Licenses designed make sure freedom distribute copies free software (charge service wish); receive source code can get want ; can change software use pieces new free programs; informed can things. protect rights, need make restrictions forbid distributors deny rights ask surrender rights. restrictions translate certain responsibilities distribute copies library modify . example, distribute copies library, whether gratis fee, must give recipients rights gave . must make sure , , receive can get source code. link code library, must provide complete object files recipients, can relink library making changes library recompiling . must show terms know rights. protect rights two-step method: (1) copyright library, (2) offer license, gives legal permission copy, distribute /modify library. protect distributor, want make clear warranty free library. Also, library modified someone else passed , recipients know original version, original author’s reputation affected problems might introduced others. Finally, software patents pose constant threat existence free program. wish make sure company effectively restrict users free program obtaining restrictive license patent holder. Therefore, insist patent license obtained version library must consistent full freedom use specified license. GNU software, including libraries, covered ordinary GNU General Public License. license, GNU Lesser General Public License, applies certain designated libraries, quite different ordinary General Public License. use license certain libraries order permit linking libraries non-free programs. program linked library, whether statically using shared library, combination two legally speaking combined work, derivative original library. ordinary General Public License therefore permits linking entire combination fits criteria freedom. Lesser General Public License permits lax criteria linking code library. call license “Lesser” General Public License Less protect user’s freedom ordinary General Public License. also provides free software developers Less advantage competing non-free programs. disadvantages reason use ordinary General Public License many libraries. However, Lesser license provides advantages certain special circumstances. example, rare occasions, may special need encourage widest possible use certain library, becomes de-facto standard. achieve , non-free programs must allowed use library. frequent case free library job widely used non-free libraries. case, little gain limiting free library free software , use Lesser General Public License. cases, permission use particular library non-free programs enables greater number people use large body free software. example, permission use GNU C Library non-free programs enables many people use whole GNU operating system, well variant, GNU/Linux operating system. Although Lesser General Public License Less protective users’ freedom, ensure user program linked Library freedom wherewithal run program using modified version Library. precise terms conditions copying, distribution modification follow. Pay close attention difference “work based library” “work uses library”. former contains code derived library, whereas latter must combined library order run.","code":""},{"path":"/LICENSE.html","id":"terms-and-conditions-for-copying-distribution-and-modification","dir":"","previous_headings":"","what":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION","title":"NA","text":"0. License Agreement applies software library program contains notice placed copyright holder authorized party saying may distributed terms Lesser General Public License (also called “License”). licensee addressed “”. “library” means collection software functions /data prepared conveniently linked application programs (use functions data) form executables. “Library”, , refers software library work distributed terms. “work based Library” means either Library derivative work copyright law: say, work containing Library portion , either verbatim modifications /translated straightforwardly another language. (Hereinafter, translation included without limitation term “modification”.) “Source code” work means preferred form work making modifications . library, complete source code means source code modules contains, plus associated interface definition files, plus scripts used control compilation installation library. Activities copying, distribution modification covered License; outside scope. act running program using Library restricted, output program covered contents constitute work based Library (independent use Library tool writing ). Whether true depends Library program uses Library . 1. may copy distribute verbatim copies Library’s complete source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice disclaimer warranty; keep intact notices refer License absence warranty; distribute copy License along Library. may charge fee physical act transferring copy, may option offer warranty protection exchange fee. 2. may modify copy copies Library portion , thus forming work based Library, copy distribute modifications work terms Section 1 , provided also meet conditions: ) modified work must software library. b) must cause files modified carry prominent notices stating changed files date change. c) must cause whole work licensed charge third parties terms License. d) facility modified Library refers function table data supplied application program uses facility, argument passed facility invoked, must make good faith effort ensure , event application supply function table, facility still operates, performs whatever part purpose remains meaningful. (example, function library compute square roots purpose entirely well-defined independent application. Therefore, Subsection 2d requires application-supplied function table used function must optional: application supply , square root function must still compute square roots.) requirements apply modified work whole. identifiable sections work derived Library, can reasonably considered independent separate works , License, terms, apply sections distribute separate works. distribute sections part whole work based Library, distribution whole must terms License, whose permissions licensees extend entire whole, thus every part regardless wrote . Thus, intent section claim rights contest rights work written entirely ; rather, intent exercise right control distribution derivative collective works based Library. addition, mere aggregation another work based Library Library (work based Library) volume storage distribution medium bring work scope License. 3. may opt apply terms ordinary GNU General Public License instead License given copy Library. , must alter notices refer License, refer ordinary GNU General Public License, version 2, instead License. (newer version version 2 ordinary GNU General Public License appeared, can specify version instead wish.) make change notices. change made given copy, irreversible copy, ordinary GNU General Public License applies subsequent copies derivative works made copy. option useful wish copy part code Library program library. 4. may copy distribute Library (portion derivative , Section 2) object code executable form terms Sections 1 2 provided accompany complete corresponding machine-readable source code, must distributed terms Sections 1 2 medium customarily used software interchange. distribution object code made offering access copy designated place, offering equivalent access copy source code place satisfies requirement distribute source code, even though third parties compelled copy source along object code. 5. program contains derivative portion Library, designed work Library compiled linked , called “work uses Library”. work, isolation, derivative work Library, therefore falls outside scope License. However, linking “work uses Library” Library creates executable derivative Library (contains portions Library), rather “work uses library”. executable therefore covered License. Section 6 states terms distribution executables. “work uses Library” uses material header file part Library, object code work may derivative work Library even though source code . Whether true especially significant work can linked without Library, work library. threshold true precisely defined law. object file uses numerical parameters, data structure layouts accessors, small macros small inline functions (ten lines less length), use object file unrestricted, regardless whether legally derivative work. (Executables containing object code plus portions Library still fall Section 6.) Otherwise, work derivative Library, may distribute object code work terms Section 6. executables containing work also fall Section 6, whether linked directly Library . 6. exception Sections , may also combine link “work uses Library” Library produce work containing portions Library, distribute work terms choice, provided terms permit modification work customer’s use reverse engineering debugging modifications. must give prominent notice copy work Library used Library use covered License. must supply copy License. work execution displays copyright notices, must include copyright notice Library among , well reference directing user copy License. Also, must one things: ) Accompany work complete corresponding machine-readable source code Library including whatever changes used work (must distributed Sections 1 2 ); , work executable linked Library, complete machine-readable “work uses Library”, object code /source code, user can modify Library relink produce modified executable containing modified Library. (understood user changes contents definitions files Library necessarily able recompile application use modified definitions.) b) Use suitable shared library mechanism linking Library. suitable mechanism one (1) uses run time copy library already present user’s computer system, rather copying library functions executable, (2) operate properly modified version library, user installs one, long modified version interface-compatible version work made . c) Accompany work written offer, valid least three years, give user materials specified Subsection 6a, , charge cost performing distribution. d) distribution work made offering access copy designated place, offer equivalent access copy specified materials place. e) Verify user already received copy materials already sent user copy. executable, required form “work uses Library” must include data utility programs needed reproducing executable . However, special exception, materials distributed need include anything normally distributed (either source binary form) major components (compiler, kernel, ) operating system executable runs, unless component accompanies executable. may happen requirement contradicts license restrictions proprietary libraries normally accompany operating system. contradiction means use Library together executable distribute. 7. may place library facilities work based Library side--side single library together library facilities covered License, distribute combined library, provided separate distribution work based Library library facilities otherwise permitted, provided two things: ) Accompany combined library copy work based Library, uncombined library facilities. must distributed terms Sections . b) Give prominent notice combined library fact part work based Library, explaining find accompanying uncombined form work. 8. may copy, modify, sublicense, link , distribute Library except expressly provided License. attempt otherwise copy, modify, sublicense, link , distribute Library void, automatically terminate rights License. However, parties received copies, rights, License licenses terminated long parties remain full compliance. 9. required accept License, since signed . However, nothing else grants permission modify distribute Library derivative works. actions prohibited law accept License. Therefore, modifying distributing Library (work based Library), indicate acceptance License , terms conditions copying, distributing modifying Library works based . 10. time redistribute Library (work based Library), recipient automatically receives license original licensor copy, distribute, link modify Library subject terms conditions. may impose restrictions recipients’ exercise rights granted herein. responsible enforcing compliance third parties License. 11. , consequence court judgment allegation patent infringement reason (limited patent issues), conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. distribute satisfy simultaneously obligations License pertinent obligations, consequence may distribute Library . example, patent license permit royalty-free redistribution Library receive copies directly indirectly , way satisfy License refrain entirely distribution Library. portion section held invalid unenforceable particular circumstance, balance section intended apply, section whole intended apply circumstances. purpose section induce infringe patents property right claims contest validity claims; section sole purpose protecting integrity free software distribution system implemented public license practices. Many people made generous contributions wide range software distributed system reliance consistent application system; author/donor decide willing distribute software system licensee impose choice. section intended make thoroughly clear believed consequence rest License. 12. distribution /use Library restricted certain countries either patents copyrighted interfaces, original copyright holder places Library License may add explicit geographical distribution limitation excluding countries, distribution permitted among countries thus excluded. case, License incorporates limitation written body License. 13. Free Software Foundation may publish revised /new versions Lesser General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Library specifies version number License applies “later version”, option following terms conditions either version later version published Free Software Foundation. Library specify license version number, may choose version ever published Free Software Foundation. 14. wish incorporate parts Library free programs whose distribution conditions incompatible , write author ask permission. software copyrighted Free Software Foundation, write Free Software Foundation; sometimes make exceptions . decision guided two goals preserving free status derivatives free software promoting sharing reuse software generally. WARRANTY 15. LIBRARY LICENSED FREE CHARGE, WARRANTY LIBRARY, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE LIBRARY “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE LIBRARY . LIBRARY PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. 16. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MAY MODIFY /REDISTRIBUTE LIBRARY PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE LIBRARY (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE LIBRARY OPERATE SOFTWARE), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-libraries","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Libraries","title":"NA","text":"develop new library, want greatest possible use public, recommend making free software everyone can redistribute change. can permitting redistribution terms (, alternatively, terms ordinary General Public License). apply terms, attach following notices library. safest attach start source file effectively convey exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. also get employer (work programmer) school, , sign “copyright disclaimer” library, necessary. sample; alter names: ’s !","code":"one line to give the library's name and an idea of what it does. Copyright (C) year  name of author  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA Yoyodyne, Inc., hereby disclaims all copyright interest in the library `Frob' (a library for tweaking knobs) written by James Random Hacker.  signature of Ty Coon, 1 April 1990 Ty Coon, President of Vice"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yannick Marcon. Author, maintainer. Amadou Gaye. Contributor. Tim Cadman. Contributor. Paul Burton. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Marcon Y (2024). DSI: 'DataSHIELD' Interface. R package version 1.7.1, https://datashield.github.io/DSI/, https://datashield.org/, https://github.com/datashield/DSI/.","code":"@Manual{,   title = {DSI: 'DataSHIELD' Interface},   author = {Yannick Marcon},   year = {2024},   note = {R package version 1.7.1,   https://datashield.github.io/DSI/, https://datashield.org/},   url = {https://github.com/datashield/DSI/}, }"},{"path":"/index.html","id":"datashield-interface","dir":"","previous_headings":"","what":"DataSHIELD Interface","title":"DataSHIELD Interface","text":"DataSHIELD Interface (DSI) defines set S4 classes generic methods can implemented accessing data repository supporting DataSHIELD infrastructure: controlled R commands executed server side garanteeing non disclosive information returned client side. Learn DataSHIELD.","code":""},{"path":"/index.html","id":"class-structure","dir":"","previous_headings":"","what":"Class Structure","title":"DataSHIELD Interface","text":"DSI classes : DSObject common base class DSI, DSDriver drives creation connection object, DSConnection allows interaction remote server; DataSHIELD operations aggregation assignment return result object; DataSHIELD setup status check can performed (dataset access, configuration comparision), DSResult wraps access result, can fetched either synchronously asynchronously depending capabilities data repository server. classes virtual: instantiated directly instead must subclassed. See DSOpal reference implementation DSI based Opal data warehouse. See also DSLite server-less implementation DSI local datasets. S4 classes generic methods meant used implementing connection DataSHIELD-aware data repository.","code":""},{"path":"/index.html","id":"higher-level-functions","dir":"","previous_headings":"","what":"Higher Level Functions","title":"DataSHIELD Interface","text":"addition S4 classes, DSI provides functions handle list remote data repository servers: datashield.login datashield.logout make use DSDriver paradigm create DSConnections data repositories, datashield.aggregate datashield.assign perform typical DataSHIELD operations DSConnections, result fetched DSResult objects, datashield.connections, datashield.connections_default datashield.connections_find functions managing list DSConnection objects discovered used client-side analytic functions. datashield.errors report last R errors may occurred datashield.assign datashield.aggregate call. datashield.workspaces, datashield.workspace_save, datashield.workspace_restore datashield.workspace_rm allow manage R images remote DataSHIELD sessions (speed data analysis sessions), datashield.symbols datashield.symbol_rm offer minimalistic management R symbols living remote DataSHIELD sessions, datashield.tables, datashield.table_status list tables accessibility across set data repositories, datashield.resources, datashield.resource_status list resources accessibility across set data repositories, datashield.pkg_status, datashield.method_status datashield.methods utility functions explore DataSHIELD setup across set data repositories. datashield.profiles lists DataSHIELD profiles can selected login time. datashield.* functions meant used DataSHIELD packages developers users.","code":""},{"path":"/index.html","id":"options","dir":"","previous_headings":"","what":"Options","title":"DataSHIELD Interface","text":"options can set modify behavior DSI: datashield.env R environment DSConnection object list looking . Default value Global Environment: globalenv(). datashield.progress logical enable visibility progress bars. Default value TRUE. datashield.progress.clear logical make progress bar disappear completed. Default value FALSE. datashield.errors.stop logical alter error handling behavior: TRUE error raised least one server failed, otherwise warning message issued. Default value TRUE. datashield.errors.print logical controlling error print console: TRUE errors automatically printed rich text, otherwise subsequent call datashield.errors() required get details errors. Default value FALSE. datashield.polling.sleep.0 time seconds wait checking async calls completion, ~1 second. Default value 50 milliseconds. datashield.polling.sleep.1 base time seconds wait checking async calls completion, ~1 second. Default value 1 second. datashield.polling.sleep.10 time seconds wait checking async calls completion, ~10 seconds. Default value x2 base time (2 seconds). datashield.polling.sleep.60 time seconds wait checking async calls completion, ~1 minute. Default value x10 base time (10 seconds). datashield.polling.sleep.600 time seconds wait checking async calls completion, ~10 minutes. Default value x60 base time (1 minute). datashield.polling.sleep.3600 time seconds wait checking async calls completion, ~1 hour. Default value x600 base time (10 minutes).","code":""},{"path":"/reference/DSConnection-class.html","id":null,"dir":"Reference","previous_headings":"","what":"DSConnection class — DSConnection-class","title":"DSConnection class — DSConnection-class","text":"virtual class encapsulates connection DataSHIELD-aware data repository, provides access data assignments aggregagtions etc.","code":""},{"path":"/reference/DSConnection-class.html","id":"implementation-note","dir":"Reference","previous_headings":"","what":"Implementation note","title":"DSConnection class — DSConnection-class","text":"Individual drivers free implement single multiple simultaneous connections.","code":""},{"path":[]},{"path":"/reference/DSConnection-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DSConnection class — DSConnection-class","text":"","code":"if (FALSE) { # \\dontrun{ con <- dsConnect(DSOpal::Opal(), \"server1\",    username = \"dsuser\", password = \"password\", url = \"https://opal-demo.obiba.org\") con dsDisconnect(con) } # }"},{"path":"/reference/DSDriver-class.html","id":null,"dir":"Reference","previous_headings":"","what":"DSDriver class — DSDriver-class","title":"DSDriver class — DSDriver-class","text":"Base class DataSHIELD-aware data repositories drivers (e.g., Opal, ...). virtual class `DSDriver` defines operations creating connections.","code":""},{"path":[]},{"path":"/reference/DSI-package.html","id":null,"dir":"Reference","previous_headings":"","what":"DSI: 'DataSHIELD' Interface — DSI-package","title":"DSI: 'DataSHIELD' Interface — DSI-package","text":"'DataSHIELD' infrastructure series R packages enables remote 'non-disclosive' analysis sensitive research data. package defines API implemented 'DataSHIELD' compliant data repositories.","code":""},{"path":[]},{"path":"/reference/DSI-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DSI: 'DataSHIELD' Interface — DSI-package","text":"Maintainer: Yannick Marcon yannick.marcon@obiba.org (ORCID) contributors: Amadou Gaye (ORCID) [contributor] Tim Cadman (ORCID) [contributor] Paul Burton [contributor]","code":""},{"path":"/reference/DSLoginBuilder.html","id":null,"dir":"Reference","previous_headings":"","what":"DataSHIELD login details builder — DSLoginBuilder","title":"DataSHIELD login details builder — DSLoginBuilder","text":"DataSHIELD login details builder DataSHIELD login details builder","code":""},{"path":"/reference/DSLoginBuilder.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"DataSHIELD login details builder — DSLoginBuilder","text":"R6 object class DSLoginBuilder","code":""},{"path":"/reference/DSLoginBuilder.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DataSHIELD login details builder — DSLoginBuilder","text":"Helper class creating valid data frame can used perform datashield.login. See also newDSLoginBuilder.","code":""},{"path":[]},{"path":"/reference/DSLoginBuilder.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"DataSHIELD login details builder — DSLoginBuilder","text":"DSLoginBuilder$new() DSLoginBuilder$append() DSLoginBuilder$build() DSLoginBuilder$clone()","code":""},{"path":"/reference/DSLoginBuilder.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"DataSHIELD login details builder — DSLoginBuilder","text":"Create new DSLoginBuilder instance.","code":""},{"path":"/reference/DSLoginBuilder.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DataSHIELD login details builder — DSLoginBuilder","text":"","code":"DSLoginBuilder$new(logins = NULL, .silent = FALSE)"},{"path":"/reference/DSLoginBuilder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataSHIELD login details builder — DSLoginBuilder","text":"logins valid login details data frame initiate builder, optional. .silent warn user non secure HTTP urls encountered. Default FALSE.","code":""},{"path":"/reference/DSLoginBuilder.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"DataSHIELD login details builder — DSLoginBuilder","text":"DSLoginBuilder object.","code":""},{"path":"/reference/DSLoginBuilder.html","id":"method-append-","dir":"Reference","previous_headings":"","what":"Method append()","title":"DataSHIELD login details builder — DSLoginBuilder","text":"Append login information specific server.","code":""},{"path":"/reference/DSLoginBuilder.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"DataSHIELD login details builder — DSLoginBuilder","text":"","code":"DSLoginBuilder$append(   server,   url,   table = \"\",   resource = \"\",   driver = \"OpalDriver\",   user = \"\",   password = \"\",   token = \"\",   options = \"\",   profile = \"\" )"},{"path":"/reference/DSLoginBuilder.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataSHIELD login details builder — DSLoginBuilder","text":"server server name (must unique). url url connect server R symbol name. table table path identifies dataset server. resource resource path identifies resource reference server. driver DSDriver-class name build DSConnection-class. user user name user credentials. password user password user credentials. token personal access token (ignored user credentials empty). options options (R code parsed) relevant DS connection object. profile DataSHIELD R server profile (affects R packages available applied configuration). provided supported, default profile applied.","code":""},{"path":"/reference/DSLoginBuilder.html","id":"method-build-","dir":"Reference","previous_headings":"","what":"Method build()","title":"DataSHIELD login details builder — DSLoginBuilder","text":"Build DSLoginBuilder instance.","code":""},{"path":"/reference/DSLoginBuilder.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"DataSHIELD login details builder — DSLoginBuilder","text":"","code":"DSLoginBuilder$build()"},{"path":"/reference/DSLoginBuilder.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"DataSHIELD login details builder — DSLoginBuilder","text":"DataSHIELD logindata data.frame","code":""},{"path":"/reference/DSLoginBuilder.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"DataSHIELD login details builder — DSLoginBuilder","text":"objects class cloneable method.","code":""},{"path":"/reference/DSLoginBuilder.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"DataSHIELD login details builder — DSLoginBuilder","text":"","code":"DSLoginBuilder$clone(deep = FALSE)"},{"path":"/reference/DSLoginBuilder.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataSHIELD login details builder — DSLoginBuilder","text":"deep Whether make deep clone.","code":""},{"path":"/reference/DSObject-class.html","id":null,"dir":"Reference","previous_headings":"","what":"DSObject class — DSObject-class","title":"DSObject class — DSObject-class","text":"Base class DataSHIELD classes (e.g., drivers, connections). virtual Class: objects may created .","code":""},{"path":"/reference/DSObject-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DSObject class — DSObject-class","text":"generally, DataSHIELD defines small set classes generics allows users applications perform meta-analysis common interface.  virtual classes `DSDriver` individual drivers extend, `DSConnection` represent instances DataSHIELD-aware data repository connections, `DSResult` represent result DataSHIELD operation. three classes extend basic class `DSObject`, serves root parent class hierarchy.","code":""},{"path":"/reference/DSObject-class.html","id":"implementation-notes","dir":"Reference","previous_headings":"","what":"Implementation notes","title":"DSObject class — DSObject-class","text":"implementation MUST provide methods following generics: dsGetInfo MAY also provide methods : summary Print concise description     object. default method invokes `dsGetInfo(dsObj)` prints     name-value pairs one per line. Individual implementations may     tailor appropriately.","code":""},{"path":[]},{"path":"/reference/DSObject-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DSObject class — DSObject-class","text":"","code":"if (FALSE) { # \\dontrun{ drv <- DSOpal::Opal() con <- dsConnect(drv,    username = \"dsuser\", password = \"password\", url = \"https://opal-demo.obiba.org\")  rs <- dsAssign(con, \"Project.TableA\") is(drv, \"DSObject\")  ## True is(con, \"DSObject\")  ## True is(rs, \"DSObject\")   ## True  dsDisconnect(con) } # }"},{"path":"/reference/DSResult-class.html","id":null,"dir":"Reference","previous_headings":"","what":"DSResult class — DSResult-class","title":"DSResult class — DSResult-class","text":"virtual class describes result state execution DataSHIELD request (aggregation assignment).","code":""},{"path":"/reference/DSResult-class.html","id":"implementation-notes","dir":"Reference","previous_headings":"","what":"Implementation notes","title":"DSResult class — DSResult-class","text":"Individual drivers free allow single multiple active results per connection. default show method displays summary query using DS generics.","code":""},{"path":[]},{"path":"/reference/datashield.aggregate.html","id":null,"dir":"Reference","previous_headings":"","what":"Data aggregation — datashield.aggregate","title":"Data aggregation — datashield.aggregate","text":"Aggregates expression result using specified aggregation method current Datashield session.","code":""},{"path":"/reference/datashield.aggregate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data aggregation — datashield.aggregate","text":"","code":"datashield.aggregate(   conns,   expr,   async = TRUE,   success = NULL,   error = NULL,   errors.print = getOption(\"datashield.errors.print\", FALSE) )"},{"path":"/reference/datashield.aggregate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data aggregation — datashield.aggregate","text":"conns DSConnection-class object list DSConnection-classs. expr Expression evaluate. async Whether result call retrieved asynchronously. TRUE (default) calls parallelized connections, connection supports feature, extra overhead requests. success Callback function called time aggregation result received connection. expected function signature connection/study name result value. Default NULL (callback). error Callback function called time aggregation request failed. expected function signature connection/study name error message. Default NULL (callback). errors.print Boolean, whether print datashield errors console return message indicating can retrieved using `datashield.errors`.","code":""},{"path":"/reference/datashield.aggregate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data aggregation — datashield.aggregate","text":"result aggregation","code":""},{"path":"/reference/datashield.aggregate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data aggregation — datashield.aggregate","text":"","code":"if (FALSE) { # \\dontrun{ # call aggregate function on server side asynchronously # i.e. each study connection will process the request in parallel result <- datashield.aggregate(conns, expr = quote(someFunction(D, 123)))  # call aggregate function on server side synchronously, i.e. each study  # connection will be called, one after the other, in a blocking way  result <- datashield.aggregate(conns, expr = quote(someFunction(D, 123)), async = FALSE)  # call aggregate functions that are defined in the provided named list.  # Connections are filtered by the list names. result <- datashield.aggregate(conns,   list(server1=quote(someFunction(D, 123)), server2=quote(someFunction(G, 456))))  # call aggregate function with callback functions result <- datashield.aggregate(conns, expr = quote(someFunction(D, 123)),   success = function(server, res) {     # do something with server's result value   },   error = function(server, error) {     # do something with server's error message   }) } # }"},{"path":"/reference/datashield.assign.expr.html","id":null,"dir":"Reference","previous_headings":"","what":"Expression result assignment — datashield.assign.expr","title":"Expression result assignment — datashield.assign.expr","text":"Assign result execution expression R symbol Datashield R session.","code":""},{"path":"/reference/datashield.assign.expr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expression result assignment — datashield.assign.expr","text":"","code":"datashield.assign.expr(   conns,   symbol,   expr,   async = TRUE,   success = NULL,   error = NULL,   errors.print = getOption(\"datashield.errors.print\", FALSE) )"},{"path":"/reference/datashield.assign.expr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expression result assignment — datashield.assign.expr","text":"conns DSConnection-class object list DSConnection-classs. symbol Name R symbol. expr R expression allowed assign functions calls. async Whether result call retrieved asynchronously. TRUE (default) calls parallelized connections, connection supports feature, extra overhead requests. success Callback function called time assignment successful. expected function signature connection/study name. Default NULL (callback). error Callback function called time assignment request failed. expected function signature connection/study name error message. Default NULL (callback). errors.print Boolean, whether print datashield errors console return message indicating can retrieved using `datashield.errors`.","code":""},{"path":"/reference/datashield.assign.expr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expression result assignment — datashield.assign.expr","text":"","code":"if (FALSE) { # \\dontrun{ # assign an expression to G asynchronously datashield.assign.expr(conns, symbol = \"G\", expr = quote(as.numeric(D$GENDER)))  # assign an expression to G synchronously datashield.assign.expr(conns, symbol = \"G\", expr = quote(as.numeric(D$GENDER)), async = FALSE)  # assign the expressions that are defined in the provided named list. # Connections are filtered by the list names. datashield.assign.expr(conns, \"G\",   list(server1=quote(as.numeric(D$GENDER)), server2=quote(as.numeric(D$SEX))))  # do assignment with callback functions datashield.assign.expr(conns, symbol = \"G\", expr = quote(as.numeric(D$GENDER)),   success = function(server) {     # do something with server's success   },   error = function(server, error) {     # do something with server's error message   }) } # }"},{"path":"/reference/datashield.assign.html","id":null,"dir":"Reference","previous_headings":"","what":"Data assignment (table or expression result) — datashield.assign","title":"Data assignment (table or expression result) — datashield.assign","text":"Assign table expression result R symbol Datashield R session. Note usage usage respectively datashield.assign.table datashield.assign.expr preferred readability.","code":""},{"path":"/reference/datashield.assign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data assignment (table or expression result) — datashield.assign","text":"","code":"datashield.assign(   conns,   symbol,   value,   variables = NULL,   missings = FALSE,   identifiers = NULL,   id.name = NULL,   async = TRUE,   success = NULL,   error = NULL )"},{"path":"/reference/datashield.assign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data assignment (table or expression result) — datashield.assign","text":"conns DSConnection-class object list DSConnection-classs. symbol Name R symbol. value Fully qualified name table reference data repositories (see  datashield.assign.table details) R expression allowed assign functions calls (see datashield.assign.expr details). variables List variable names Javascript expression selects variables table (ignored value refere table). See javascript documentation: http://opaldoc.obiba.org/en/latest/magma-user-guide/variable/ missings TRUE, missing values pushed data repository R, default FALSE. Ignored value R expression. identifiers Name identifiers mapping use assigning entities R (supported data repository). id.name Name column contain entity identifiers. specified, identifiers data frame row names. specified column can used perform joins data frames. async Whether result call retrieved asynchronously (TRUE means calls parallelized connections, connection supports feature, extra overhead requests). success Callback function called time assignment successful. expected function signature connection/study name. Default NULL (callback). error Callback function called time assignment request failed. expected function signature connection/study name error message. Default NULL (callback).","code":""},{"path":"/reference/datashield.assign.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data assignment (table or expression result) — datashield.assign","text":"","code":"if (FALSE) { # \\dontrun{ # assign a list of variables from table CNSIM1 datashield.assign(conn, symbol=\"D\", value=\"CNSIM.CNSIM1\",   variables=list(\"GENDER\",\"LAB_GLUC\"))  # assign all the variables matching 'LAB' from table CNSIM1 datashield.assign(conn, symbol=\"D\", value=\"CNSIM.CNSIM1\",   variables=\"name().matches('LAB_')\")  # do assignment with callback functions datashield.assign(conns, \"D\",   list(server1=\"CNSIM.CNSIM1\", server2=\"CNSIM.CNSIM2\"),   success = function(server) {     # do something with server's success   },   error = function(server, error) {     # do something with server's error message   }) } # }"},{"path":"/reference/datashield.assign.resource.html","id":null,"dir":"Reference","previous_headings":"","what":"Resource assignment — datashield.assign.resource","title":"Resource assignment — datashield.assign.resource","text":"Assign resource object class 'ResourceClient' R symbol Datashield R session.","code":""},{"path":"/reference/datashield.assign.resource.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resource assignment — datashield.assign.resource","text":"","code":"datashield.assign.resource(   conns,   symbol,   resource,   async = TRUE,   success = NULL,   error = NULL,   errors.print = getOption(\"datashield.errors.print\", FALSE) )"},{"path":"/reference/datashield.assign.resource.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resource assignment — datashield.assign.resource","text":"conns DSConnection-class object list DSConnection-classs. symbol Name R symbol. resource Fully qualified name resource reference data repository (can vector must data repository); named list fully qualified resource names (one per server name); data frame 'server' 'resource' columns (one used datashield.login) async Whether result call retrieved asynchronously. TRUE (default) calls parallelized connections, connection supports feature, extra overhead requests. success Callback function called time assignment successful. expected function signature connection/study name. Default NULL (callback). error Callback function called time assignment request failed. expected function signature connection/study name error message. Default NULL (callback). errors.print Boolean, whether print datashield errors console return message indicating can retrieved using `datashield.errors`.","code":""},{"path":"/reference/datashield.assign.resource.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resource assignment — datashield.assign.resource","text":"","code":"if (FALSE) { # \\dontrun{ # assign a resource asynchronously datashield.assign.resource(conn, symbol=\"rsrc\", resource=\"RSRC.CNSIM1\")  # assign a resource synchronously datashield.assign.resource(conn, symbol=\"rsrc\", resource=\"RSRC.CNSIM1\", async = FALSE)  # assign the tables that are defined in the logindata ('server' and 'resource' columns are # expected) data frame that is used in datashield.login() function. Connections names # and server names must match. datashield.assign.resource(conns, \"rsrc\", logindata)  # assign the resources that are defined in the provided named list. # Connections are filtered by the list names. datashield.assign.resource(conns, \"rsrc\",   list(server1=\"RSRC.CNSIM1\", server2=\"RSRC.CNSIM2\"))  # do assignment with callback functions datashield.assign.resource(conn, symbol=\"rsrc\",   resource = list(server1=\"RSRC.CNSIM1\", server2=\"RSRC.CNSIM2\"),   success = function(server) {     # do something with server's success   },   error = function(server, error) {     # do something with server's error message   }) } # }"},{"path":"/reference/datashield.assign.table.html","id":null,"dir":"Reference","previous_headings":"","what":"Table assignment — datashield.assign.table","title":"Table assignment — datashield.assign.table","text":"Assign table R symbol Datashield R session.","code":""},{"path":"/reference/datashield.assign.table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table assignment — datashield.assign.table","text":"","code":"datashield.assign.table(   conns,   symbol,   table,   variables = NULL,   missings = FALSE,   identifiers = NULL,   id.name = NULL,   async = TRUE,   success = NULL,   error = NULL,   errors.print = getOption(\"datashield.errors.print\", FALSE) )"},{"path":"/reference/datashield.assign.table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table assignment — datashield.assign.table","text":"conns DSConnection-class object list DSConnection-classs. symbol Name R symbol. table Fully qualified name table data repository (can vector must data repository); named list fully qualified table names (one per server name); data frame 'server' 'table' columns (one used datashield.login) variables List variable names Javascript expression selects variables table. See javascript documentation: http://opaldoc.obiba.org/en/latest/magma-user-guide/variable/ missings TRUE, missing values pushed data repository R, default FALSE. Ignored value R expression. identifiers Name identifiers mapping use assigning entities R (supported data repository). id.name Name column contain entity identifiers. specified, identifiers data frame row names. specified column can used perform joins data frames. async Whether result call retrieved asynchronously. TRUE (default) calls parallelized connections, connection supports feature, extra overhead requests. success Callback function called time assignment successful. expected function signature connection/study name. Default NULL (callback). error Callback function called time assignment request failed. expected function signature connection/study name error message. Default NULL (callback). errors.print Boolean, whether print datashield errors console return message indicating can retrieved using `datashield.errors`.","code":""},{"path":"/reference/datashield.assign.table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Table assignment — datashield.assign.table","text":"","code":"if (FALSE) { # \\dontrun{ # assign a list of variables from table CNSIM1 datashield.assign.table(conn, symbol=\"D\", table=\"CNSIM.CNSIM1\",   variables=list(\"GENDER\",\"LAB_GLUC\"))  # assign all the variables matching 'LAB' from table CNSIM1 datashield.assign.table(conn, symbol=\"D\", table=\"CNSIM.CNSIM1\",   variables=\"name().matches('LAB_')\")  # assign the tables that are defined in the logindata ('server' and 'table' columns are # expected) data frame that is used in datashield.login() function. Connections # are filtered by the list names. datashield.assign.table(conns, \"D\", logindata)  # assign the tables that are defined in the provided named list. # Connections are filtered by the list names. datashield.assign.table(conns, \"D\",   list(server1=\"CNSIM.CNSIM1\", server2=\"CNSIM.CNSIM2\"))  # do assignment with callback functions datashield.assign.table(conns, \"D\",   list(server1=\"CNSIM.CNSIM1\", server2=\"CNSIM.CNSIM2\"),   success = function(server) {     # do something with server's success   },   error = function(server, error) {     # do something with server's error message   }) } # }"},{"path":"/reference/datashield.connections.html","id":null,"dir":"Reference","previous_headings":"","what":"List the DSConnection objects in the analytic environment — datashield.connections","title":"List the DSConnection objects in the analytic environment — datashield.connections","text":"function identifies prints DSConnection-class objects analytic environment. DSConnection servers analytic environment datashield.connections reminds user login valid set DataSHIELD aware servers. one set DSConnections, copies one set names copy 'default.connections'. default set used default subsequent calls client-side functions. one set DSConnections analytic environment, datashield.connections tells user can either explicitly specify DSConnections used client-side function providing explicit \"datasources=\" argument call, can alternatively use datashield.connections_default function specify default set DSConnections used client-side calls unless -ruled 'datasources=' argument.","code":""},{"path":"/reference/datashield.connections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List the DSConnection objects in the analytic environment — datashield.connections","text":"","code":"datashield.connections(env = getOption(\"datashield.env\", globalenv()))"},{"path":"/reference/datashield.connections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List the DSConnection objects in the analytic environment — datashield.connections","text":"env environment search connection symbols. Try get 'datashield.env' option, default Global Environment.","code":""},{"path":"/reference/datashield.connections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List the DSConnection objects in the analytic environment — datashield.connections","text":"Returns list DSConnection-class objects advises user best respond depending whether zero, one multiple connections detected.","code":""},{"path":[]},{"path":"/reference/datashield.connections_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Set or get the default list of DSConnection objects in the analytic environment — datashield.connections_default","title":"Set or get the default list of DSConnection objects in the analytic environment — datashield.connections_default","text":"default one set DSConnection-class objects available analysis, DataSHIELD client-side functions use full set DSConnections unless 'datasources=' argument set specifies particular subset DSConnections used instead. correct identification full single set opals based datashield.connections_find function. illustrate, single set Opals called 'study.opals' consists six servers numbered studies[1] studies[6] client-side functions use data six 'studies' unless, say, datasources=studies[c(2,5)] declared data second fifth studies used. hand, one set DSConnections analytic environment client-side functions unable determine set use. function datashield.connections_find therefore written one DSConnection sets called 'default.connections' set - .e. 'default.connections' - selected default DataSHIELD client-side functions. one set DSConnections analytic environment NONE called 'default.connections', function datashield.connections_find fail. Therefore datashield.connections_default copies provided set DSConnections 'default.connections'. set selected default client-side functions, unless deleted alternative set DSConnections copied named 'default.connections'. Regardless many sets DSConnections exist regardless whether may called 'default.connections', 'datasources=' argument overrides defaults allows user base /analysis set DSConnections subset DSConnections.","code":""},{"path":"/reference/datashield.connections_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set or get the default list of DSConnection objects in the analytic environment — datashield.connections_default","text":"","code":"datashield.connections_default(   name = NULL,   env = getOption(\"datashield.env\", globalenv()) )"},{"path":"/reference/datashield.connections_default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set or get the default list of DSConnection objects in the analytic environment — datashield.connections_default","text":"name Symbol name identifies set DSConnection-class objects used default. provided, 'default.connections' variable value returned. env environment search connection symbols. Try get 'datashield.env' option, default Global Environment.","code":""},{"path":"/reference/datashield.connections_default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set or get the default list of DSConnection objects in the analytic environment — datashield.connections_default","text":"'default.connections' value analytic environment NULL 'default.connections' symbol defined.","code":""},{"path":[]},{"path":"/reference/datashield.connections_find.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for DSConnection objects in the analytic environment — datashield.connections_find","title":"Search for DSConnection objects in the analytic environment — datashield.connections_find","text":"user set argument 'datasources' client side analysis functions, function called search DSConnection-class objects environment (default environment Global one). one set DSConnection objects found, assigned 'default.connections' symbol analytic environment. one set DSConnection objects found none called 'default.connections', function stops suggests user use datashield.connections_default function.","code":""},{"path":"/reference/datashield.connections_find.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for DSConnection objects in the analytic environment — datashield.connections_find","text":"","code":"datashield.connections_find(env = getOption(\"datashield.env\", globalenv()))"},{"path":"/reference/datashield.connections_find.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for DSConnection objects in the analytic environment — datashield.connections_find","text":"env environment search connection symbols. Try get 'datashield.env' option, default Global Environment.","code":""},{"path":"/reference/datashield.connections_find.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for DSConnection objects in the analytic environment — datashield.connections_find","text":"Returns list DSConnection-class objects stops process","code":""},{"path":[]},{"path":"/reference/datashield.errorMessages.html","id":null,"dir":"Reference","previous_headings":"","what":"datashield.errorMessages — datashield.errorMessages","title":"datashield.errorMessages — datashield.errorMessages","text":"Retrieve display DataSHIELD errors CLI format","code":""},{"path":"/reference/datashield.errorMessages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"datashield.errorMessages — datashield.errorMessages","text":"","code":"datashield.errorMessages()"},{"path":"/reference/datashield.errorMessages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"datashield.errorMessages — datashield.errorMessages","text":"NULL errors found, otherwise prints errors.","code":""},{"path":"/reference/datashield.errorMessages.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"datashield.errorMessages — datashield.errorMessages","text":"function retrieves last errors occurred DataSHIELD session displays formatted manner using bullet points.","code":""},{"path":"/reference/datashield.errors.html","id":null,"dir":"Reference","previous_headings":"","what":"datashield.errors — datashield.errors","title":"datashield.errors — datashield.errors","text":"Retrieve display last errors occurred DataSHIELD session.","code":""},{"path":"/reference/datashield.errors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"datashield.errors — datashield.errors","text":"","code":"datashield.errors()"},{"path":"/reference/datashield.errors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"datashield.errors — datashield.errors","text":"NULL errors found, otherwise list containing errors server.","code":""},{"path":"/reference/datashield.login.html","id":null,"dir":"Reference","previous_headings":"","what":"Logs in a DataSHIELD R sessions and optionaly assigns variables to R — datashield.login","title":"Logs in a DataSHIELD R sessions and optionaly assigns variables to R — datashield.login","text":"function allows clients login data repository servers (optionaly) assign data specific variables data repositories tables R data frames. assigned dataframes (one data repository) named 'D' (default). Different login strategies supported: using certificate/private key pair (2-way SSL encryption mechanism), using user credentials (user name password) using personal access token (combined user name, depending data repository system).","code":""},{"path":"/reference/datashield.login.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logs in a DataSHIELD R sessions and optionaly assigns variables to R — datashield.login","text":"","code":"datashield.login(   logins = NULL,   assign = FALSE,   variables = NULL,   missings = FALSE,   symbol = \"D\",   id.name = NULL,   opts = getOption(\"datashield.opts\", list()),   restore = NULL,   failSafe = FALSE )"},{"path":"/reference/datashield.login.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logs in a DataSHIELD R sessions and optionaly assigns variables to R — datashield.login","text":"logins dataframe table holds login details. table holds five elements required login servers data analyse stored. expected column names 'driver' (DSDriver-class name, default \"OpalDriver\"), 'server' (server name), url' (server url), 'user' (user name certificate PEM file path), 'password' (user password private key PEM file path), 'token' (personal access token, ignored 'user' defined), 'table' (fully qualified name table data repository), 'resource' (fully qualified name resource reference data repository), 'profile' (optional DataSHIELD profile name), 'options' (SSL options). additional column 'identifiers' can specified identifiers mapping (supported data repository). See also documentation examplar input table logindata details login elements. assign boolean tells whether data assigned data repository table R login server(s). variables Specific variables assign. assign set FALSE argument ignored otherwise specified variables assigned R. variables specified (default) whole data repository's table assigned. missings TRUE, missing values pushed data repository R, default FALSE. symbol character, name data frame data repository's table assigned login server(s). id.name Name column contain entity identifiers. specified, identifiers data frame row names. specified column can used perform joins data frames. opts Default SSL options used case specified logins structure. restore workspace name restore (optional). failSafe Ignores, warning, servers connection established. Optional, default FALSE.","code":""},{"path":"/reference/datashield.login.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logs in a DataSHIELD R sessions and optionaly assigns variables to R — datashield.login","text":"object(s) class DSConnection","code":""},{"path":"/reference/datashield.login.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logs in a DataSHIELD R sessions and optionaly assigns variables to R — datashield.login","text":"","code":"if (FALSE) { # \\dontrun{  #### The below examples illustrate an analysises that use test/simulated data ####  # build your data.frame builder <- newDSLoginBuilder() builder$append(server=\"server1\", url=\"https://opal-demo.obiba.org\",                table=\"datashield.CNSIM1\", resource=\"datashield.CNSIM1r\",                user=\"dsuser\", password=\"password\",                options=\"list(ssl_verifyhost=0,ssl_verifypeer=0)\") builder$append(server=\"server2\", url=\"dslite.server\",                table=\"CNSIM2\", resource=\"CNSIM2r\", driver=\"DSLiteDriver\") builder$append(server=\"server3\", url=\"https://molgenis.example.org\",                table=\"CNSIM3\", resource=\"CNSIM3r\", token=\"123456789\", driver=\"MolgenisDriver\") builder$append(server=\"server4\", url=\"dslite.server\",                table=\"CNSIM4\", resource=\"CNSIM4r\", driver=\"DSLiteDriver\") logindata <- builder$build()  # or load the data.frame that contains the login details data(logindata)  # Example 1: just login (default) connections <- datashield.login(logins=logindata)  # Example 2: login and assign the whole dataset connections <- datashield.login(logins=logindata, assign=TRUE)  # Example 3: login and assign specific variable(s) myvar <- list(\"LAB_TSC\") connections <- datashield.login(logins=logindata, assign=TRUE, variables=myvar)  # Example 4: ignore with a warning message servers for which connection cannot be established connections <- datashield.login(logins=logindata, failSafe=TRUE)  # note that the asignment information can also be provided afterwards builder <- newDSLoginBuilder() builder$append(server=\"server1\", url=\"https://opal-demo.obiba.org\",                user=\"dsuser\", password=\"password\") builder$append(server=\"server2\", url=\"https://opal-test.obiba.org\",                token=\"123456789\") logindata <- builder$build() connections <- datashield.login(logins=logindata) datashield.assign.table(connections, symbol = \"D\",                         table = list(server1 = \"CNSIM.CNSIM1\",                                      server2 = \"CNSIM.CNSIM2\")) datashield.assign.resource(connections, symbol = \"rsrc\",                            resource = list(server1 = \"res.CNSIM1\",                                         server2 = \"res.CNSIM2\")) } # }"},{"path":"/reference/datashield.logout.html","id":null,"dir":"Reference","previous_headings":"","what":"Logout from DataSHIELD R sessions — datashield.logout","title":"Logout from DataSHIELD R sessions — datashield.logout","text":"Clear Datashield R sessions logout DataSHIELD data repositories.","code":""},{"path":"/reference/datashield.logout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logout from DataSHIELD R sessions — datashield.logout","text":"","code":"datashield.logout(conns, save = NULL)"},{"path":"/reference/datashield.logout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logout from DataSHIELD R sessions — datashield.logout","text":"conns DSConnection-class object list DSConnection-classs. save Save datashield sessions DataSHIELD data repository (feature supported) provided ID (must character string).","code":""},{"path":"/reference/datashield.method_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Status of the DataSHIELD methods — datashield.method_status","title":"Status of the DataSHIELD methods — datashield.method_status","text":"Get status DataSHIELD methods different data repositories check method missing.","code":""},{"path":"/reference/datashield.method_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Status of the DataSHIELD methods — datashield.method_status","text":"","code":"datashield.method_status(conns, type = \"aggregate\")"},{"path":"/reference/datashield.method_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Status of the DataSHIELD methods — datashield.method_status","text":"conns DSConnection-class object list DSConnection-classs. type Type method: \"aggregate\" (default) \"assign\".","code":""},{"path":"/reference/datashield.method_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Status of the DataSHIELD methods — datashield.method_status","text":"Methods availability server.","code":""},{"path":"/reference/datashield.methods.html","id":null,"dir":"Reference","previous_headings":"","what":"List of DataSHIELD methods — datashield.methods","title":"List of DataSHIELD methods — datashield.methods","text":"Get list DataSHIELD methods different data repositories.","code":""},{"path":"/reference/datashield.methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of DataSHIELD methods — datashield.methods","text":"","code":"datashield.methods(conns, type = \"aggregate\")"},{"path":"/reference/datashield.methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of DataSHIELD methods — datashield.methods","text":"conns DSConnection-class object list DSConnection-classs. type Type method: \"aggregate\" (default) \"assign\".","code":""},{"path":"/reference/datashield.methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List of DataSHIELD methods — datashield.methods","text":"Methods details servers.","code":""},{"path":"/reference/datashield.pkg_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Check server-side package minimum version — datashield.pkg_check","title":"Check server-side package minimum version — datashield.pkg_check","text":"Check server, accessible provided DSConnection-class objects, whether installed","code":""},{"path":"/reference/datashield.pkg_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check server-side package minimum version — datashield.pkg_check","text":"","code":"datashield.pkg_check(   conns,   name,   version,   env = getOption(\"datashield.env\", globalenv()) )"},{"path":"/reference/datashield.pkg_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check server-side package minimum version — datashield.pkg_check","text":"conns DSConnection-class object list DSConnection-classs. name name server-side package. version minimum package version number matched. env Environment package status result cached. Try get 'datashield.env' option, default Global Environment.","code":""},{"path":"/reference/datashield.pkg_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Status of the DataSHIELD packages — datashield.pkg_status","title":"Status of the DataSHIELD packages — datashield.pkg_status","text":"Get status DataSHIELD packages different data repositories check package missing.","code":""},{"path":"/reference/datashield.pkg_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Status of the DataSHIELD packages — datashield.pkg_status","text":"","code":"datashield.pkg_status(conns)"},{"path":"/reference/datashield.pkg_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Status of the DataSHIELD packages — datashield.pkg_status","text":"conns DSConnection-class object list DSConnection-classs.","code":""},{"path":"/reference/datashield.pkg_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Status of the DataSHIELD packages — datashield.pkg_status","text":"Packages status server.","code":""},{"path":"/reference/datashield.profiles.html","id":null,"dir":"Reference","previous_headings":"","what":"List of DataSHIELD profiles — datashield.profiles","title":"List of DataSHIELD profiles — datashield.profiles","text":"Get list DataSHIELD profiles different data repositories: available ones currently applied connection.","code":""},{"path":"/reference/datashield.profiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of DataSHIELD profiles — datashield.profiles","text":"","code":"datashield.profiles(conns)"},{"path":"/reference/datashield.profiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of DataSHIELD profiles — datashield.profiles","text":"conns DSConnection-class object list DSConnection-classs.","code":""},{"path":"/reference/datashield.profiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List of DataSHIELD profiles — datashield.profiles","text":"Profiles details servers.","code":""},{"path":"/reference/datashield.resource_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Status of some resources — datashield.resource_status","title":"Status of some resources — datashield.resource_status","text":"Get whether identified resources accessible data repositories.","code":""},{"path":"/reference/datashield.resource_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Status of some resources — datashield.resource_status","text":"","code":"datashield.resource_status(conns, resource)"},{"path":"/reference/datashield.resource_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Status of some resources — datashield.resource_status","text":"conns DSConnection-class object list DSConnection-classs. resource Fully qualified name resource data repository (can vector must data repository); named list fully qualified resource names (one per server name); data frame 'server' 'resource' columns (one used datashield.login)","code":""},{"path":"/reference/datashield.resource_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Status of some resources — datashield.resource_status","text":"Resource status server.","code":""},{"path":"/reference/datashield.resources.html","id":null,"dir":"Reference","previous_headings":"","what":"List of the resources — datashield.resources","title":"List of the resources — datashield.resources","text":"Get list resources different data repositories.","code":""},{"path":"/reference/datashield.resources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of the resources — datashield.resources","text":"","code":"datashield.resources(conns)"},{"path":"/reference/datashield.resources.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of the resources — datashield.resources","text":"conns DSConnection-class object list DSConnection-classs.","code":""},{"path":"/reference/datashield.resources.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List of the resources — datashield.resources","text":"Resource unique names servers.","code":""},{"path":"/reference/datashield.resources.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of the resources — datashield.resources","text":"","code":"if (FALSE) { # \\dontrun{   datashield.resources(conns) } # }"},{"path":"/reference/datashield.rm.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a R symbol — datashield.rm","title":"Remove a R symbol — datashield.rm","text":"Remove symbol current Datashield session.","code":""},{"path":"/reference/datashield.rm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a R symbol — datashield.rm","text":"","code":"datashield.rm(conns, symbol)"},{"path":"/reference/datashield.rm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a R symbol — datashield.rm","text":"conns DSConnection-class object list DSConnection-classs. symbol Name R symbol.","code":""},{"path":"/reference/datashield.symbols.html","id":null,"dir":"Reference","previous_headings":"","what":"List R symbols — datashield.symbols","title":"List R symbols — datashield.symbols","text":"Get R symbols available datashield.assign calls Datashield R session.","code":""},{"path":"/reference/datashield.symbols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List R symbols — datashield.symbols","text":"","code":"datashield.symbols(conns)"},{"path":"/reference/datashield.symbols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List R symbols — datashield.symbols","text":"conns DSConnection-class object list DSConnection-classs.","code":""},{"path":"/reference/datashield.table_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Status of some tables — datashield.table_status","title":"Status of some tables — datashield.table_status","text":"Get whether identified tables accessible data repositories.","code":""},{"path":"/reference/datashield.table_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Status of some tables — datashield.table_status","text":"","code":"datashield.table_status(conns, table)"},{"path":"/reference/datashield.table_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Status of some tables — datashield.table_status","text":"conns DSConnection-class object list DSConnection-classs. table Fully qualified name table data repository (can vector must data repository); named list fully qualified table names (one per server name); data frame 'server' 'table' columns (one used datashield.login)","code":""},{"path":"/reference/datashield.table_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Status of some tables — datashield.table_status","text":"Table status server.","code":""},{"path":"/reference/datashield.tables.html","id":null,"dir":"Reference","previous_headings":"","what":"List of the tables — datashield.tables","title":"List of the tables — datashield.tables","text":"Get list tables different data repositories.","code":""},{"path":"/reference/datashield.tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of the tables — datashield.tables","text":"","code":"datashield.tables(conns)"},{"path":"/reference/datashield.tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of the tables — datashield.tables","text":"conns DSConnection-class object list DSConnection-classs.","code":""},{"path":"/reference/datashield.tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List of the tables — datashield.tables","text":"Table unique names servers.","code":""},{"path":"/reference/datashield.tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of the tables — datashield.tables","text":"","code":"if (FALSE) { # \\dontrun{   datashield.tables(conns) } # }"},{"path":"/reference/datashield.workspace_restore.html","id":null,"dir":"Reference","previous_headings":"","what":"Restore saved workspace to the current DataSHIELD R session — datashield.workspace_restore","title":"Restore saved workspace to the current DataSHIELD R session — datashield.workspace_restore","text":"Restore state previously saved DataSHIELD R session (workspace saved datashield.workspace_save) provided name data repository. Note restoring workspace, existing symbol file name overridden.","code":""},{"path":"/reference/datashield.workspace_restore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restore saved workspace to the current DataSHIELD R session — datashield.workspace_restore","text":"","code":"datashield.workspace_restore(conns, ws)"},{"path":"/reference/datashield.workspace_restore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restore saved workspace to the current DataSHIELD R session — datashield.workspace_restore","text":"conns DSConnection-class object list DSConnection-classs. ws workspace name","code":""},{"path":"/reference/datashield.workspace_rm.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a DataSHIELD workspace — datashield.workspace_rm","title":"Remove a DataSHIELD workspace — datashield.workspace_rm","text":"Remove data repository workspace provided name.","code":""},{"path":"/reference/datashield.workspace_rm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a DataSHIELD workspace — datashield.workspace_rm","text":"","code":"datashield.workspace_rm(conns, ws)"},{"path":"/reference/datashield.workspace_rm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a DataSHIELD workspace — datashield.workspace_rm","text":"conns DSConnection-class object list DSConnection-classs. ws workspace name","code":""},{"path":"/reference/datashield.workspace_save.html","id":null,"dir":"Reference","previous_headings":"","what":"Save DataSHIELD R session to a workspace — datashield.workspace_save","title":"Save DataSHIELD R session to a workspace — datashield.workspace_save","text":"Save current state DataSHIELD R session workspace provided name data repository. workspace can restored next datashield.login datashield.workspace_restore.","code":""},{"path":"/reference/datashield.workspace_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save DataSHIELD R session to a workspace — datashield.workspace_save","text":"","code":"datashield.workspace_save(conns, ws)"},{"path":"/reference/datashield.workspace_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save DataSHIELD R session to a workspace — datashield.workspace_save","text":"conns DSConnection-class object list DSConnection-classs. ws workspace name","code":""},{"path":"/reference/datashield.workspaces.html","id":null,"dir":"Reference","previous_headings":"","what":"List saved DataSHIELD R workspaces — datashield.workspaces","title":"List saved DataSHIELD R workspaces — datashield.workspaces","text":"Get list R workspaces saved Datashield R session.","code":""},{"path":"/reference/datashield.workspaces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List saved DataSHIELD R workspaces — datashield.workspaces","text":"","code":"datashield.workspaces(conns)"},{"path":"/reference/datashield.workspaces.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List saved DataSHIELD R workspaces — datashield.workspaces","text":"conns DSConnection-class object list DSConnection-classs.","code":""},{"path":"/reference/dot-appendError.html","id":null,"dir":"Reference","previous_headings":"","what":"Append error message to last errors vector — .appendError","title":"Append error message to last errors vector — .appendError","text":"Append error message last errors vector","code":""},{"path":"/reference/dot-appendError.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append error message to last errors vector — .appendError","text":"","code":".appendError(name, msg, env = getOption(\"datashield.env\", globalenv()))"},{"path":"/reference/dot-asNamedListOfConnections.html","id":null,"dir":"Reference","previous_headings":"","what":"Makes a single DSConnection-class object or a named list of DSConnection-class objects. — .asNamedListOfConnections","title":"Makes a single DSConnection-class object or a named list of DSConnection-class objects. — .asNamedListOfConnections","text":"Makes single DSConnection-class object named list DSConnection-class objects.","code":""},{"path":"/reference/dot-asNamedListOfConnections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Makes a single DSConnection-class object or a named list of DSConnection-class objects. — .asNamedListOfConnections","text":"","code":".asNamedListOfConnections(conns)"},{"path":"/reference/dot-asNamedListOfResources.html","id":null,"dir":"Reference","previous_headings":"","what":"Makes a typical logindata data frame a list of resources named by the server in which they are defined. Makes a character vector of resource names a list named by the connections. — .asNamedListOfResources","title":"Makes a typical logindata data frame a list of resources named by the server in which they are defined. Makes a character vector of resource names a list named by the connections. — .asNamedListOfResources","text":"Makes typical logindata data frame list resources named server defined. Makes character vector resource names list named connections.","code":""},{"path":"/reference/dot-asNamedListOfResources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Makes a typical logindata data frame a list of resources named by the server in which they are defined. Makes a character vector of resource names a list named by the connections. — .asNamedListOfResources","text":"","code":".asNamedListOfResources(conns, value)"},{"path":"/reference/dot-asNamedListOfTables.html","id":null,"dir":"Reference","previous_headings":"","what":"Makes a typical logindata data frame a list of tables named by the server in which they are defined. Makes a character vector of table names a list named by the connections. — .asNamedListOfTables","title":"Makes a typical logindata data frame a list of tables named by the server in which they are defined. Makes a character vector of table names a list named by the connections. — .asNamedListOfTables","text":"Makes typical logindata data frame list tables named server defined. Makes character vector table names list named connections.","code":""},{"path":"/reference/dot-asNamedListOfTables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Makes a typical logindata data frame a list of tables named by the server in which they are defined. Makes a character vector of table names a list named by the connections. — .asNamedListOfTables","text":"","code":".asNamedListOfTables(conns, value)"},{"path":"/reference/dot-asNamedListOfValues.html","id":null,"dir":"Reference","previous_headings":"","what":"Makes a typical logindata data frame a list of items named by the server in which they are defined. Makes a character vector of item names a list named by the connections. — .asNamedListOfValues","title":"Makes a typical logindata data frame a list of items named by the server in which they are defined. Makes a character vector of item names a list named by the connections. — .asNamedListOfValues","text":"Makes typical logindata data frame list items named server defined. Makes character vector item names list named connections.","code":""},{"path":"/reference/dot-asNamedListOfValues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Makes a typical logindata data frame a list of items named by the server in which they are defined. Makes a character vector of item names a list named by the connections. — .asNamedListOfValues","text":"","code":".asNamedListOfValues(conns, value, colname = NULL)"},{"path":"/reference/dot-checkLastErrors.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if there are last errors — .checkLastErrors","title":"Check if there are last errors — .checkLastErrors","text":"Check last errors","code":""},{"path":"/reference/dot-checkLastErrors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if there are last errors — .checkLastErrors","text":"","code":".checkLastErrors(env = getOption(\"datashield.env\", globalenv()))"},{"path":"/reference/dot-clearCache.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear some cache — .clearCache","title":"Clear some cache — .clearCache","text":"Clear cache","code":""},{"path":"/reference/dot-clearCache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear some cache — .clearCache","text":"","code":".clearCache(env = getOption(\"datashield.env\", globalenv()))"},{"path":"/reference/dot-clearLastErrors.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear last errors — .clearLastErrors","title":"Clear last errors — .clearLastErrors","text":"Clear last errors","code":""},{"path":"/reference/dot-clearLastErrors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear last errors — .clearLastErrors","text":"","code":".clearLastErrors(env = getOption(\"datashield.env\", globalenv()))"},{"path":"/reference/dot-deparse.html","id":null,"dir":"Reference","previous_headings":"","what":"Deparse language expression — .deparse","title":"Deparse language expression — .deparse","text":"Deparse language expression","code":""},{"path":"/reference/dot-deparse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deparse language expression — .deparse","text":"","code":".deparse(expr)"},{"path":"/reference/dot-getDSConnections.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets the DSConnection-class objects — .getDSConnections","title":"Gets the DSConnection-class objects — .getDSConnections","text":"function searches list containing object type DSConnection-class current environment; one list found return lastest. way matter user calls connection object list captured.","code":""},{"path":"/reference/dot-getDSConnections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets the DSConnection-class objects — .getDSConnections","text":"","code":".getDSConnections(env)"},{"path":"/reference/dot-getDSConnections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets the DSConnection-class objects — .getDSConnections","text":"env environment search connection symbols.","code":""},{"path":"/reference/dot-getDSConnections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets the DSConnection-class objects — .getDSConnections","text":"list DSConnection-class objects obtained login servers","code":""},{"path":"/reference/dot-getSleepTime.html","id":null,"dir":"Reference","previous_headings":"","what":"Get time to sleep depending on the numer of previous iterations — .getSleepTime","title":"Get time to sleep depending on the numer of previous iterations — .getSleepTime","text":"Get time sleep depending numer previous iterations","code":""},{"path":"/reference/dot-getSleepTime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get time to sleep depending on the numer of previous iterations — .getSleepTime","text":"","code":".getSleepTime(checks)"},{"path":"/reference/dot-hasLastErrors.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if there are last errors — .hasLastErrors","title":"Check if there are last errors — .hasLastErrors","text":"Check last errors","code":""},{"path":"/reference/dot-hasLastErrors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if there are last errors — .hasLastErrors","text":"","code":".hasLastErrors(name, env = getOption(\"datashield.env\", globalenv()))"},{"path":"/reference/dot-is.callback.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a callback parameter is a valid function — .is.callback","title":"Check if a callback parameter is a valid function — .is.callback","text":"Check callback parameter valid function","code":""},{"path":"/reference/dot-is.callback.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a callback parameter is a valid function — .is.callback","text":"","code":".is.callback(cb)"},{"path":"/reference/dot-isDSConnection.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if provided object is a S4 class instance and if this class inherits from DSConnection-class. — .isDSConnection","title":"Check if provided object is a S4 class instance and if this class inherits from DSConnection-class. — .isDSConnection","text":"Check provided object S4 class instance class inherits DSConnection-class.","code":""},{"path":"/reference/dot-isDSConnection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if provided object is a S4 class instance and if this class inherits from DSConnection-class. — .isDSConnection","text":"","code":".isDSConnection(obj)"},{"path":"/reference/dot-newProgress.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new progress instance with default settings. — .newProgress","title":"Create a new progress instance with default settings. — .newProgress","text":"Create new progress instance default settings.","code":""},{"path":"/reference/dot-newProgress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new progress instance with default settings. — .newProgress","text":"","code":".newProgress(   format = \"  :what [:bar] :percent /:elapsed\",   clear = getOption(\"datashield.progress.clear\", FALSE),   total,   width = 100 )"},{"path":"/reference/dot-tickProgress.html","id":null,"dir":"Reference","previous_headings":"","what":"Update and increment the progress status if option ","title":"Update and increment the progress status if option ","text":"Update increment progress status option \"datashield.progress\" TRUE.","code":""},{"path":"/reference/dot-tickProgress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update and increment the progress status if option ","text":"","code":".tickProgress(progress, tokens = list())"},{"path":"/reference/dot-updateProgress.html","id":null,"dir":"Reference","previous_headings":"","what":"Update the progress status if option ","title":"Update the progress status if option ","text":"Update progress status option \"datashield.progress\" TRUE.","code":""},{"path":"/reference/dot-updateProgress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update the progress status if option ","text":"","code":".updateProgress(progress, step, total, tokens = list())"},{"path":"/reference/dsAggregate.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate data — dsAggregate","title":"Aggregate data — dsAggregate","text":"Aggregate data DataSHIELD R session using valid R expression. aggregation expression must satisfy data repository's DataSHIELD configuration.","code":""},{"path":"/reference/dsAggregate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate data — dsAggregate","text":"","code":"dsAggregate(conn, expr, async = TRUE)"},{"path":"/reference/dsAggregate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate data — dsAggregate","text":"conn object inherits DSConnection-class. expr Expression evaluate. async Whether result call retrieved asynchronously. TRUE (default) calls parallelized connections, connection supports feature, extra overhead requests.","code":""},{"path":[]},{"path":"/reference/dsAggregate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate data — dsAggregate","text":"","code":"if (FALSE) { # \\dontrun{ con <- dsConnect(DSOpal::Opal(), \"server1\",   username = \"dsuser\", password = \"password\", url = \"https://opal-demo.obiba.org\") dsAssignTable(con, \"D\", \"test.CNSIM\") dsAggregate(con, as.symbol(\"meanDS(D$WEIGHT)\")) dsDisconnect(con) } # }"},{"path":"/reference/dsAssignExpr.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign an expression result — dsAssignExpr","title":"Assign an expression result — dsAssignExpr","text":"Assign result evaluation expression symbol DataSHIELD R session assignment expression must satisfy data repository's DataSHIELD configuration.","code":""},{"path":"/reference/dsAssignExpr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign an expression result — dsAssignExpr","text":"","code":"dsAssignExpr(conn, symbol, expr, async = TRUE)"},{"path":"/reference/dsAssignExpr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign an expression result — dsAssignExpr","text":"conn object inherits DSConnection-class. symbol Name R symbol. expr R expression allowed assign functions calls. async Whether result call retrieved asynchronously. TRUE (default) calls parallelized connections, connection supports feature, extra overhead requests.","code":""},{"path":[]},{"path":"/reference/dsAssignExpr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign an expression result — dsAssignExpr","text":"","code":"if (FALSE) { # \\dontrun{ con <- dsConnect(DSOpal::Opal(), \"server1\",   username = \"dsuser\", password = \"password\", url = \"https://opal-demo.obiba.org\") dsAssignExpr(con, \"C\", as.symbol(\"c(1, 2, 3)\")) dsDisconnect(con) } # }"},{"path":"/reference/dsAssignResource.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign a resource object — dsAssignResource","title":"Assign a resource object — dsAssignResource","text":"Assign resource object class 'ResourceClient' data repository symbol DataSHIELD R session. resource reference assigned must exist (.e. proper permissions apply) DataSHIELD user.","code":""},{"path":"/reference/dsAssignResource.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign a resource object — dsAssignResource","text":"","code":"dsAssignResource(conn, symbol, resource, async = TRUE)"},{"path":"/reference/dsAssignResource.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign a resource object — dsAssignResource","text":"conn object inherits DSConnection-class. symbol Name R symbol. resource Fully qualified name resource reference data repository. async Whether result call retrieved asynchronously. TRUE (default) calls parallelized connections, connection supports feature, extra overhead requests.","code":""},{"path":[]},{"path":"/reference/dsAssignResource.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign a resource object — dsAssignResource","text":"","code":"if (FALSE) { # \\dontrun{ con <- dsConnect(DSOpal::Opal(), \"server1\",   username = \"dsuser\", password = \"password\", url = \"https://opal-demo.obiba.org\") dsAssignResource(con, \"D\", \"test.CNSIM\") dsDisconnect(con) } # }"},{"path":"/reference/dsAssignTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign a data table — dsAssignTable","title":"Assign a data table — dsAssignTable","text":"Assign data table data repository symbol DataSHIELD R session. table assigned must exist (.e. proper permissions apply) DataSHIELD user.","code":""},{"path":"/reference/dsAssignTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign a data table — dsAssignTable","text":"","code":"dsAssignTable(   conn,   symbol,   table,   variables = NULL,   missings = FALSE,   identifiers = NULL,   id.name = NULL,   async = TRUE )"},{"path":"/reference/dsAssignTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign a data table — dsAssignTable","text":"conn object inherits DSConnection-class. symbol Name R symbol. table Fully qualified name table data repository. variables List variable names Javascript expression selects variables table. See javascript documentation: http://opaldoc.obiba.org/en/latest/magma-user-guide/variable/ missings TRUE, missing values pushed data repository R, default FALSE. identifiers Name identifiers mapping use assigning entities R (supported data repository). id.name Name column contain entity identifiers. specified, identifiers data frame row names. specified column can used perform joins data frames. async Whether result call retrieved asynchronously. TRUE (default) calls parallelized connections, connection supports feature, extra overhead requests.","code":""},{"path":[]},{"path":"/reference/dsAssignTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign a data table — dsAssignTable","text":"","code":"if (FALSE) { # \\dontrun{ con <- dsConnect(DSOpal::Opal(), \"server1\",   username = \"dsuser\", password = \"password\", url = \"https://opal-demo.obiba.org\") dsAssignTable(con, \"D\", \"test.CNSIM\") dsDisconnect(con) } # }"},{"path":"/reference/dsConnect.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a connection to a DataSHIELD-aware data repository — dsConnect","title":"Create a connection to a DataSHIELD-aware data repository — dsConnect","text":"Connect data repository going appropriate authentication procedure. implementations may allow multiple connections open, may invoke function repeatedly assigning output different objects. authentication mechanism left unspecified, check documentation individual drivers details.","code":""},{"path":"/reference/dsConnect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a connection to a DataSHIELD-aware data repository — dsConnect","text":"","code":"dsConnect(drv, name, restore = NULL, ...)"},{"path":"/reference/dsConnect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a connection to a DataSHIELD-aware data repository — dsConnect","text":"drv object inherits DSDriver-class. name Name connection, must unique among DataSHIELD connections. restore Workspace name restored newly created DataSHIELD R session. ... authentication arguments needed data repository instance; typically include `username`, `password`, `token`, `host`, `port`, `dbname`, etc. details see appropriate `DSDriver`.","code":""},{"path":[]},{"path":"/reference/dsConnect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a connection to a DataSHIELD-aware data repository — dsConnect","text":"","code":"if (FALSE) { # \\dontrun{ con <- dsConnect(DSOpal::Opal(), \"server1\",   username = \"dsuser\", password = \"password\", url = \"https://opal-demo.obiba.org\") con dsListTables(con) dsDisconnect(con) } # }"},{"path":"/reference/dsDisconnect.html","id":null,"dir":"Reference","previous_headings":"","what":"Disconnect (close) a connection — dsDisconnect","title":"Disconnect (close) a connection — dsDisconnect","text":"closes connection, discards pending work, frees resources (e.g., memory, sockets).","code":""},{"path":"/reference/dsDisconnect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Disconnect (close) a connection — dsDisconnect","text":"","code":"dsDisconnect(conn, save = NULL)"},{"path":"/reference/dsDisconnect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Disconnect (close) a connection — dsDisconnect","text":"conn object inheriting DSConnection-class. save Save DataSHIELD session data repository provided identifier string.","code":""},{"path":[]},{"path":"/reference/dsDisconnect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Disconnect (close) a connection — dsDisconnect","text":"","code":"if (FALSE) { # \\dontrun{ con <- dsConnect(DSOpal::Opal(), \"server1\",   username = \"dsuser\", password = \"password\", url = \"https://opal-demo.obiba.org\") dsDisconnect(con) } # }"},{"path":"/reference/dsFetch.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the raw result — dsFetch","title":"Get the raw result — dsFetch","text":"Wait result available fetch result previous assignment aggregation operation may run asynchronously, case one-shot call. assignment aggregation operation asynchronous, result wrapped object can fetched multiple times.","code":""},{"path":"/reference/dsFetch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the raw result — dsFetch","text":"","code":"dsFetch(res)"},{"path":"/reference/dsFetch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the raw result — dsFetch","text":"res object inheriting DSResult-class.","code":""},{"path":[]},{"path":"/reference/dsFetch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the raw result — dsFetch","text":"","code":"if (FALSE) { # \\dontrun{ con <- dsConnect(DSOpal::Opal(), \"server1\",   username = \"dsuser\", password = \"password\", url = \"https://opal-demo.obiba.org\") dsAssignExpr(con, \"C\", as.symbol(\"c(1, 2, 3)\")) res <- dsAggregate(con, as.symbol(\"length(C)\")) length <- dsFetch(res) dsDisconnect(con) } # }"},{"path":"/reference/dsGetInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Get DataSHIELD-aware data repository metadata — dsGetInfo","title":"Get DataSHIELD-aware data repository metadata — dsGetInfo","text":"Get DataSHIELD-aware data repository metadata","code":""},{"path":"/reference/dsGetInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get DataSHIELD-aware data repository metadata — dsGetInfo","text":"","code":"dsGetInfo(dsObj, ...)"},{"path":"/reference/dsGetInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get DataSHIELD-aware data repository metadata — dsGetInfo","text":"dsObj object inheriting DSObject-class, .e. DSDriver-class, DSConnection-class, DSResult-class. ... arguments methods.","code":""},{"path":"/reference/dsGetInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get DataSHIELD-aware data repository metadata — dsGetInfo","text":"named list","code":""},{"path":"/reference/dsGetInfo.html","id":"implementation-notes","dir":"Reference","previous_headings":"","what":"Implementation notes","title":"Get DataSHIELD-aware data repository metadata — dsGetInfo","text":"`DSDriver` subclasses, include version package (`driver.version`) version underlying client library (`client.version`). `DSConnection` objects report version data repository application (`repo.version`) name (`repo.name`), database name (`dbname`), username, (`username`), host (`host`), port (`port`), etc. MAY also include arguments related connection (e.g., thread id, socket TCP connection type). MUST include password. `DSResult` objects, include R expression executed (expression object tailored implementation DSI) query complete (result object tailored implementation DSI).","code":""},{"path":[]},{"path":"/reference/dsHasResource.html","id":null,"dir":"Reference","previous_headings":"","what":"Check remote resource exists — dsHasResource","title":"Check remote resource exists — dsHasResource","text":"Check remote resource reference exists data repository. Returns logical indicating existence remote resource accessible connection.","code":""},{"path":"/reference/dsHasResource.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check remote resource exists — dsHasResource","text":"","code":"dsHasResource(conn, resource)"},{"path":"/reference/dsHasResource.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check remote resource exists — dsHasResource","text":"conn object inherits DSConnection-class. resource resource fully qualified name","code":""},{"path":[]},{"path":"/reference/dsHasResource.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check remote resource exists — dsHasResource","text":"","code":"if (FALSE) { # \\dontrun{ con <- dsConnect(DSOpal::Opal(), \"server1\",   username = \"dsuser\", password = \"password\", url = \"https://opal-demo.obiba.org\") dsHasResource(con, \"test.CNSIM\") dsDisconnect(con) } # }"},{"path":"/reference/dsHasTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Check remote table exists — dsHasTable","title":"Check remote table exists — dsHasTable","text":"Check remote table exists data repository. Returns logical indicating existence remote table accessible connection.","code":""},{"path":"/reference/dsHasTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check remote table exists — dsHasTable","text":"","code":"dsHasTable(conn, table)"},{"path":"/reference/dsHasTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check remote table exists — dsHasTable","text":"conn object inherits DSConnection-class. table table fully qualified name","code":""},{"path":[]},{"path":"/reference/dsHasTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check remote table exists — dsHasTable","text":"","code":"if (FALSE) { # \\dontrun{ con <- dsConnect(DSOpal::Opal(), \"server1\",   username = \"dsuser\", password = \"password\", url = \"https://opal-demo.obiba.org\") dsHasTable(con, \"test.CNSIM\") dsDisconnect(con) } # }"},{"path":"/reference/dsIsAsync.html","id":null,"dir":"Reference","previous_headings":"","what":"Asynchronous result support — dsIsAsync","title":"Asynchronous result support — dsIsAsync","text":"DSResult-class object returned aggregation assignment operation, raw result can accessed asynchronously, allowing parallelization DataSHIELD calls multpile servers. returned named list logicals specify asynchronicity supported : aggregation operation ('aggregate'), table assignment operation ('assignTable'), resource assignment operation ('assignResource') expression assignment operation ('assignExpr').","code":""},{"path":"/reference/dsIsAsync.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Asynchronous result support — dsIsAsync","text":"","code":"dsIsAsync(conn)"},{"path":"/reference/dsIsAsync.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Asynchronous result support — dsIsAsync","text":"conn object inherits DSConnection-class.","code":""},{"path":[]},{"path":"/reference/dsIsAsync.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Asynchronous result support — dsIsAsync","text":"","code":"if (FALSE) { # \\dontrun{ con <- dsConnect(DSOpal::Opal(), \"server1\",   username = \"dsuser\", password = \"password\", url = \"https://opal-demo.obiba.org\") dsIsAsync(con) dsDisconnect(con) } # }"},{"path":"/reference/dsIsCompleted.html","id":null,"dir":"Reference","previous_headings":"","what":"Get whether the operation is completed — dsIsCompleted","title":"Get whether the operation is completed — dsIsCompleted","text":"Get whether result previous assignment aggregation operation completed, either successful status failed one. call must wait completion, immediate response expected. result identified completed, raw result operation can get directly.","code":""},{"path":"/reference/dsIsCompleted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get whether the operation is completed — dsIsCompleted","text":"","code":"dsIsCompleted(res)"},{"path":"/reference/dsIsCompleted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get whether the operation is completed — dsIsCompleted","text":"res object inheriting DSResult-class.","code":""},{"path":"/reference/dsIsCompleted.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get whether the operation is completed — dsIsCompleted","text":"logical","code":""},{"path":[]},{"path":"/reference/dsIsCompleted.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get whether the operation is completed — dsIsCompleted","text":"","code":"if (FALSE) { # \\dontrun{ con <- dsConnect(DSOpal::Opal(), \"server1\",   username = \"dsuser\", password = \"password\", url = \"https://opal-demo.obiba.org\") dsAssignExpr(con, \"C\", as.symbol(\"c(1, 2, 3)\")) res <- dsAggregate(con, as.symbol(\"length(C)\"), async = TRUE) completed <- dsIsCompleted(res) while (!completed) {   Sys.sleep(1)   completed <- dsIsCompleted(res) } length <- dsFetch(res) dsDisconnect(con) } # }"},{"path":"/reference/dsKeepAlive.html","id":null,"dir":"Reference","previous_headings":"","what":"Keep a connection alive — dsKeepAlive","title":"Keep a connection alive — dsKeepAlive","text":"DataSHIELD sessions working parallel, function helps keeping idle connections alive others working. communication failure must silently processed.","code":""},{"path":"/reference/dsKeepAlive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keep a connection alive — dsKeepAlive","text":"","code":"dsKeepAlive(conn)"},{"path":"/reference/dsKeepAlive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Keep a connection alive — dsKeepAlive","text":"conn object inheriting DSConnection-class.","code":""},{"path":[]},{"path":"/reference/dsKeepAlive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Keep a connection alive — dsKeepAlive","text":"","code":"if (FALSE) { # \\dontrun{ con <- dsConnect(DSOpal::Opal(), \"server1\",   username = \"dsuser\", password = \"password\", url = \"https://opal-demo.obiba.org\") dsKeepAlive(con) dsDisconnect(con) } # }"},{"path":"/reference/dsListMethods.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the DataSHIELD methods — dsListMethods","title":"Get the DataSHIELD methods — dsListMethods","text":"Get list DataSHIELD methods configured remote data repository.","code":""},{"path":"/reference/dsListMethods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the DataSHIELD methods — dsListMethods","text":"","code":"dsListMethods(conn, type = \"aggregate\")"},{"path":"/reference/dsListMethods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the DataSHIELD methods — dsListMethods","text":"conn object inherits DSConnection-class. type Type method: \"aggregate\" (default) \"assign\".","code":""},{"path":"/reference/dsListMethods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the DataSHIELD methods — dsListMethods","text":"data.frame columns: name, type ('aggregate' 'assign'), class ('function' 'script'), value, package, version.","code":""},{"path":[]},{"path":"/reference/dsListMethods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the DataSHIELD methods — dsListMethods","text":"","code":"if (FALSE) { # \\dontrun{ con <- dsConnect(DSOpal::Opal(), \"server1\",   username = \"dsuser\", password = \"password\", url = \"https://opal-demo.obiba.org\") dsListMethods(con) dsDisconnect(con) } # }"},{"path":"/reference/dsListPackages.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the DataSHIELD packages — dsListPackages","title":"Get the DataSHIELD packages — dsListPackages","text":"Get list DataSHIELD packages version, configured remote data repository.","code":""},{"path":"/reference/dsListPackages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the DataSHIELD packages — dsListPackages","text":"","code":"dsListPackages(conn)"},{"path":"/reference/dsListPackages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the DataSHIELD packages — dsListPackages","text":"conn object inherits DSConnection-class.","code":""},{"path":"/reference/dsListPackages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the DataSHIELD packages — dsListPackages","text":"data.frame columns: name, version.","code":""},{"path":[]},{"path":"/reference/dsListPackages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the DataSHIELD packages — dsListPackages","text":"","code":"if (FALSE) { # \\dontrun{ con <- dsConnect(DSOpal::Opal(), \"server1\",   username = \"dsuser\", password = \"password\", url = \"https://opal-demo.obiba.org\") dsListPackages(con) dsDisconnect(con) } # }"},{"path":"/reference/dsListProfiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the DataSHIELD profiles — dsListProfiles","title":"Get the DataSHIELD profiles — dsListProfiles","text":"Get list DataSHIELD profiles configured remote data repository.","code":""},{"path":"/reference/dsListProfiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the DataSHIELD profiles — dsListProfiles","text":"","code":"dsListProfiles(conn)"},{"path":"/reference/dsListProfiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the DataSHIELD profiles — dsListProfiles","text":"conn object inherits DSConnection-class.","code":""},{"path":"/reference/dsListProfiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the DataSHIELD profiles — dsListProfiles","text":"list containing \"available\" character vector profile names \"current\" profile (case default one assigned).","code":""},{"path":[]},{"path":"/reference/dsListProfiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the DataSHIELD profiles — dsListProfiles","text":"","code":"if (FALSE) { # \\dontrun{ con <- dsConnect(DSOpal::Opal(), \"server1\",   username = \"dsuser\", password = \"password\", url = \"https://opal-demo.obiba.org\") dsListProfiles(con) dsDisconnect(con) } # }"},{"path":"/reference/dsListResources.html","id":null,"dir":"Reference","previous_headings":"","what":"List remote resources — dsListResources","title":"List remote resources — dsListResources","text":"List remote resources data repository. Returns unquoted names remote resources accessible connection.","code":""},{"path":"/reference/dsListResources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List remote resources — dsListResources","text":"","code":"dsListResources(conn)"},{"path":"/reference/dsListResources.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List remote resources — dsListResources","text":"conn object inherits DSConnection-class.","code":""},{"path":[]},{"path":"/reference/dsListResources.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List remote resources — dsListResources","text":"","code":"if (FALSE) { # \\dontrun{ con <- dsConnect(DSOpal::Opal(), \"server1\",   username = \"dsuser\", password = \"password\", url = \"https://opal-demo.obiba.org\") dsListResources(con) dsDisconnect(con) } # }"},{"path":"/reference/dsListSymbols.html","id":null,"dir":"Reference","previous_headings":"","what":"List symbols — dsListSymbols","title":"List symbols — dsListSymbols","text":"assignments performed, symbols live DataSHIELD R session server side.","code":""},{"path":"/reference/dsListSymbols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List symbols — dsListSymbols","text":"","code":"dsListSymbols(conn)"},{"path":"/reference/dsListSymbols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List symbols — dsListSymbols","text":"conn object inherits DSConnection-class.","code":""},{"path":[]},{"path":"/reference/dsListSymbols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List symbols — dsListSymbols","text":"","code":"if (FALSE) { # \\dontrun{ con <- dsConnect(DSOpal::Opal(), \"server1\",   username = \"dsuser\", password = \"password\", url = \"https://opal-demo.obiba.org\") dsAssignTable(con, \"D\", \"test.CNSIM\") dsListSymbols(con) dsDisconnect(con) } # }"},{"path":"/reference/dsListTables.html","id":null,"dir":"Reference","previous_headings":"","what":"List remote tables — dsListTables","title":"List remote tables — dsListTables","text":"List remote tables data repository. Returns unquoted names remote tables accessible connection.","code":""},{"path":"/reference/dsListTables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List remote tables — dsListTables","text":"","code":"dsListTables(conn)"},{"path":"/reference/dsListTables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List remote tables — dsListTables","text":"conn object inherits DSConnection-class.","code":""},{"path":"/reference/dsListTables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List remote tables — dsListTables","text":"character vector table names.","code":""},{"path":[]},{"path":"/reference/dsListTables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List remote tables — dsListTables","text":"","code":"if (FALSE) { # \\dontrun{ con <- dsConnect(DSOpal::Opal(), \"server1\",   username = \"dsuser\", password = \"password\", url = \"https://opal-demo.obiba.org\") dsListTables(con) dsDisconnect(con) } # }"},{"path":"/reference/dsListWorkspaces.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the DataSHIELD workspaces — dsListWorkspaces","title":"Get the DataSHIELD workspaces — dsListWorkspaces","text":"Get list DataSHIELD workspaces, saved remote data repository.","code":""},{"path":"/reference/dsListWorkspaces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the DataSHIELD workspaces — dsListWorkspaces","text":"","code":"dsListWorkspaces(conn)"},{"path":"/reference/dsListWorkspaces.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the DataSHIELD workspaces — dsListWorkspaces","text":"conn object inherits DSConnection-class.","code":""},{"path":"/reference/dsListWorkspaces.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the DataSHIELD workspaces — dsListWorkspaces","text":"data.frame columns: name, lastAccessDate, size.","code":""},{"path":[]},{"path":"/reference/dsListWorkspaces.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the DataSHIELD workspaces — dsListWorkspaces","text":"","code":"if (FALSE) { # \\dontrun{ con <- dsConnect(DSOpal::Opal(), \"server1\",   username = \"dsuser\", password = \"password\", url = \"https://opal-demo.obiba.org\") dsListWorkspaces(con) dsDisconnect(con) } # }"},{"path":"/reference/dsRestoreWorkspace.html","id":null,"dir":"Reference","previous_headings":"","what":"Restore a saved DataSHIELD R session (a workspace) into the current DataSHIELD R session — dsRestoreWorkspace","title":"Restore a saved DataSHIELD R session (a workspace) into the current DataSHIELD R session — dsRestoreWorkspace","text":"Restore saved DataSHIELD R session remote data repository. restoring workspace, existing symbol file name overridden.","code":""},{"path":"/reference/dsRestoreWorkspace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restore a saved DataSHIELD R session (a workspace) into the current DataSHIELD R session — dsRestoreWorkspace","text":"","code":"dsRestoreWorkspace(conn, name)"},{"path":"/reference/dsRestoreWorkspace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restore a saved DataSHIELD R session (a workspace) into the current DataSHIELD R session — dsRestoreWorkspace","text":"conn object inherits DSConnection-class. name Name workspace","code":""},{"path":[]},{"path":"/reference/dsRestoreWorkspace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Restore a saved DataSHIELD R session (a workspace) into the current DataSHIELD R session — dsRestoreWorkspace","text":"","code":"if (FALSE) { # \\dontrun{ con <- dsConnect(DSOpal::Opal(), \"server1\",   username = \"dsuser\", password = \"password\", url = \"https://opal-demo.obiba.org\") dsListWorkspaces(con) dsRestoreWorkspace(con, \"foo\") dsDisconnect(con) } # }"},{"path":"/reference/dsRmSymbol.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a symbol — dsRmSymbol","title":"Remove a symbol — dsRmSymbol","text":"removal, data identified symbol accessible DataSHIELD R session server side.","code":""},{"path":"/reference/dsRmSymbol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a symbol — dsRmSymbol","text":"","code":"dsRmSymbol(conn, symbol)"},{"path":"/reference/dsRmSymbol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a symbol — dsRmSymbol","text":"conn object inherits DSConnection-class. symbol Name R symbol.","code":""},{"path":[]},{"path":"/reference/dsRmSymbol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove a symbol — dsRmSymbol","text":"","code":"if (FALSE) { # \\dontrun{ con <- dsConnect(DSOpal::Opal(), \"server1\",   username = \"dsuser\", password = \"password\", url = \"https://opal-demo.obiba.org\") dsAssignTable(con, \"D\", \"test.CNSIM\") dsRmSymbol(con, \"D\") dsDisconnect(con) } # }"},{"path":"/reference/dsRmWorkspace.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a DataSHIELD workspace — dsRmWorkspace","title":"Remove a DataSHIELD workspace — dsRmWorkspace","text":"Remove DataSHIELD workspace remote data repository. Ignore workspace exists.","code":""},{"path":"/reference/dsRmWorkspace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a DataSHIELD workspace — dsRmWorkspace","text":"","code":"dsRmWorkspace(conn, name)"},{"path":"/reference/dsRmWorkspace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a DataSHIELD workspace — dsRmWorkspace","text":"conn object inherits DSConnection-class. name Name workspace","code":""},{"path":[]},{"path":"/reference/dsRmWorkspace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove a DataSHIELD workspace — dsRmWorkspace","text":"","code":"if (FALSE) { # \\dontrun{ con <- dsConnect(DSOpal::Opal(), \"server1\",   username = \"dsuser\", password = \"password\", url = \"https://opal-demo.obiba.org\") dsSaveWorkspace(con, \"foo\") dsListWorkspaces(con) dsRmWorkspace(con, \"foo\") dsListWorkspaces(con) dsDisconnect(con) } # }"},{"path":"/reference/dsSaveWorkspace.html","id":null,"dir":"Reference","previous_headings":"","what":"Save the DataSHIELD R session in a workspace — dsSaveWorkspace","title":"Save the DataSHIELD R session in a workspace — dsSaveWorkspace","text":"Save DataSHIELD R session workspace remote data repository.","code":""},{"path":"/reference/dsSaveWorkspace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save the DataSHIELD R session in a workspace — dsSaveWorkspace","text":"","code":"dsSaveWorkspace(conn, name)"},{"path":"/reference/dsSaveWorkspace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save the DataSHIELD R session in a workspace — dsSaveWorkspace","text":"conn object inherits DSConnection-class. name Name workspace","code":""},{"path":[]},{"path":"/reference/dsSaveWorkspace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save the DataSHIELD R session in a workspace — dsSaveWorkspace","text":"","code":"if (FALSE) { # \\dontrun{ con <- dsConnect(DSOpal::Opal(), \"server1\",   username = \"dsuser\", password = \"password\", url = \"https://opal-demo.obiba.org\") dsSaveWorkspace(con, \"foo\") dsListWorkspaces(con) dsDisconnect(con) } # }"},{"path":"/reference/newDSLoginBuilder.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new DataSHIELD login details builder — newDSLoginBuilder","title":"Create a new DataSHIELD login details builder — newDSLoginBuilder","text":"Shortcut function create new DSLoginBuilder instance. data frame built can used perform datashield.login.","code":""},{"path":"/reference/newDSLoginBuilder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new DataSHIELD login details builder — newDSLoginBuilder","text":"","code":"newDSLoginBuilder(logins = NULL, .silent = FALSE)"},{"path":"/reference/newDSLoginBuilder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new DataSHIELD login details builder — newDSLoginBuilder","text":"logins valid login details data frame initiate builder, optional. .silent warn user non secure HTTP urls encountered. Default FALSE.","code":""},{"path":"/reference/newDSLoginBuilder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new DataSHIELD login details builder — newDSLoginBuilder","text":"","code":"{   builder <- newDSLoginBuilder()   builder$append(server=\"server1\", url=\"https://opal-demo.obiba.org\", table=\"datashield.CNSIM1\",     user=\"administrator\", password=\"password\")   builder$append(server=\"server2\", url=\"dslite.server\", table=\"CNSIM2\")   builder$append(server=\"server3\", url=\"http://molgenis.example.org\", table=\"CNSIM3\",    token=\"123456789\")   builder$append(server=\"server4\", url=\"dslite.server\", table=\"CNSIM4\")   logindata <- builder$build() } #> Warning: Secure HTTP connection is recommended: http://molgenis.example.org"}]
